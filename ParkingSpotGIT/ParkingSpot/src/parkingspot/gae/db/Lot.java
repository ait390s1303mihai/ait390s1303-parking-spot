/**
 * Copyright 2013 -
 * Licensed under the Academic Free License version 3.0
 * http://opensource.org/licenses/AFL-3.0
 * 
 * Authors: Mihai Boicu
 */
package parkingspot.gae.db;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.google.appengine.api.datastore.Entity;


/**
 * GAE ENTITY UTIL CLASS: "Lot" <br>
 * PARENT: Campus <br>
 * KEY: A lot long Id generated by GAE <br>
 * FEATURES: <br>
 * - "name" a {@link String} with the name of the lot (e.g. "Lot A")<br>
 * - "total-spaces" an int with the total number of spaces<br>
 * - "google-map-location" a {@link String} with the Google map coordinates (e.g. "Lot A General, Braddock, Virginia, United States@38.826182,-77.308211") <br>
 */


/**
 * 
 *	ENTITY KIND: "Lot"
 *	PARENT: "Campus"
 *	KEY: A unique Id for each lot
 *	FEATURES:
 *		Name: "Name" Type:String
 *		Name: "Spaces" Type: Int
 *		Name: "Location" Type: String
 *	Examples:
 *	Campus-->Lot("A")
 *		"Name" = "Lot A"
 *		"TotalSpaces" = 350
 * 		"Location" "Lot A General, Braddock, Virginia, United States@38.826182,-77.308211"
 *  
 */     

public class Lot{
	
	//
	// SECURITY
	//
	
	/**
	 * Private constructor to avoid instantiation.
	 */
	private Lot() {
	}
	
	//
	// KIND
	//
	
	/**
	 * The name of the Lot ENTITY KIND used in GAE.
	 */
	private static final String ENTITY_KIND = "Lot";
	
	//
	// NAME
	//
	
	/**
	 * The property name for the <b>name</b> of the lot.
	 */
	private static final String NAME_PROPERTY = "name";
	
	/**
	 * Return the name of the lot. 
	 * @param lot The GAE Entity storing the lot.
	 * @return the name of the lot. 
	 */
	public static String getName(Entity lot) {
		return (String) lot.getProperty(NAME_PROPERTY);
	}
	
	/**
	 * The regular expression pattern for the name of the lot.
	 */
	private static final Pattern NAME_PATTERN = Pattern.compile("\\A[\\s\\w-'',]{3,}\\Z");
	
	/**
	 * Check if the name is correct for a lot. 
	 * @param name The checked string. 
	 * @return true is the name is correct. 
	 */
	public static boolean checkName(String name) {
		Matcher matcher=NAME_PATTERN.matcher(name);
		return matcher.find();
	}
	

	

	

	
   
}